name: Continuous Deployment For Production

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  verification:
    name: Check Merge Conflict
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check for Merge Conflicts
        run: |
          git fetch origin main
          if ! git merge-base --is-ancestor origin/main HEAD; then
            echo "üö® Konflik terdeteksi! Perbaiki sebelum merge."
            exit 1
          fi
          echo "‚úÖ Tidak ada konflik. Lanjutkan."
          
      - name: Detect Merge Conflict Markers
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} ${{ github.sha }})

          echo "üîç File yang diubah:"
          echo "$CHANGED_FILES"

          # Filter: Hanya file php, js, html dan abaikan direktori tertentu
          FILES_TO_CHECK=$(echo "$CHANGED_FILES" | grep -E '\.(php|js|html)$' | grep -Ev '^(vendor|node_modules|storage)/' || true)

          # Jika ada file yang sesuai, jalankan pengecekan
          if [ -n "$FILES_TO_CHECK" ]; then
            echo "üìÇ File yang diperiksa:"
            echo "$FILES_TO_CHECK"

            # Cari marker konflik di file yang difilter
            echo "$FILES_TO_CHECK" | xargs grep -Hn "<<<<<<<" && {
              echo "üö® Terdeteksi konflik! Tolong selesaikan sebelum merge."
              exit 1
            } || echo "‚úÖ Tidak ada konflik yang ditemukan."
          else
            echo "‚úÖ Tidak ada file PHP, JS, atau HTML yang diubah."
          fi
          
  deployment:
    name: Deploy to Server
    needs: verification
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Production Server
        run: |
          echo "‚úÖ Success"
